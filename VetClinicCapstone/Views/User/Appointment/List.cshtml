<!DOCTYPE html>
<html>
<head>
    <title>Pet Patients Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Monthly Pet Patients Count</h1>
    <canvas id="petPatientsChart" width="400" height="200"></canvas>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetchChartData();
        });

        async function fetchChartData() {
            try {
                const response = await fetch('/api/Api/MonthlyCount');
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                console.log('Fetched data:', data); // Log fetched data for debugging
                displayChart(data);
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        function displayChart(data) {
            const ctx = document.getElementById('petPatientsChart').getContext('2d');

            if (!data || !Array.isArray(data) || data.length === 0) {
                console.error('No data available or invalid data format:', data);
                return;
            }

            const labels = data.map(d => d.Month);
            const counts = data.map(d => d.Count);

            console.log('Labels:', labels); // Use console.log for debugging
            console.log('Counts:', counts); // Use console.log for debugging

            // Array of colors for each bar
            const colors = [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(199, 199, 199, 0.2)',
                'rgba(83, 102, 255, 0.2)',
                'rgba(255, 99, 71, 0.2)',
                'rgba(0, 255, 127, 0.2)',
                'rgba(255, 20, 147, 0.2)',
                'rgba(255, 140, 0, 0.2)'
            ];

            // Ensure we have enough colors
            const backgroundColors = colors.slice(0, labels.length);
            const borderColors = backgroundColors.map(color => color.replace('0.2', '1')); // Adjust border color

            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Monthly Patient Counts',
                        data: counts,
                        backgroundColor: backgroundColors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
    </script>
</body>
</html>
