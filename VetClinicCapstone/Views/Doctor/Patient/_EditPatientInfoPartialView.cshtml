@using VetClinicCapstone.Models;
@model PatientTbl



<div class="modal modalEdit fade bs-example-modal-lg" id="EditText-@Model.Patient_ID" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
	<div class="modal-dialog modal-lg">

		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title" id="myLargeModalLabel">Patient Info</h4>
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			</div>
			<div class="modal-body">

				<div class="col-lg-12">


					<div class="col-lg-6">

						@{
							var getFileName = Model.FileName;
							if (!string.IsNullOrEmpty(getFileName))
							{
								<img src="@Url.Content("~/PetImage/" + getFileName)" alt="Image" class="img-fluid rounded" style="width: 170px; height: 170px;" />
							}
							else
							{
								<img src="~/images/avatar/1.jpg" alt="Pet Image" class="img-fluid rounded" style="width: 170px; height: 170px;">
							}
						}
						<form asp-controller="Patient" asp-action="ImageUpload" method="post" id="uploadForm-@Model.Patient_ID" enctype="multipart/form-data" class="mt-2 needs-validation" novalidate>
							<input type="hidden" name="id" value="@Model.Patient_ID" />
							<div class="mb-3">
								<label for="imageFile" class="form-label">Upload Image</label>
								<input type="file" id="imageFile" name="imageFile" class="form-control" aria-label="file example" required accept=".jpeg,.png">
								<div class="invalid-feedback">
									Please select a valid image file (.jpeg, .png).
								</div>
							</div>
							<button type="submit" class="btn btn-primary btn-block">Upload</button>
						</form>
					</div>
					<br>
					<hr>
					<br>
					<form method="post" id="EditPatientForm-@Model.Patient_ID" class="needs-validation" novalidate>
						<input type="hidden" id="title" asp-for="Patient_ID" class="form-control">
						<h4 class="box-title text-info"><i class="mdi mdi-paw mr-15"></i> Edit Patient Info</h4>
						<hr class="my-15">
						<div class="row">
							<div class="col-md-6">

								<div class="form-group">
									<label>Pet Name <span class="text-danger">*</span></label>
									<input asp-for="PatientName" id="petname-@Model.Patient_ID" type="text" class="form-control" placeholder="Pet Name" required>
									<div class="invalid-feedback">
										Pet Name required!
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									<label>Species <span class="text-danger">*</span></label>
									<input asp-for="Species" type="text" id="species-@Model.Patient_ID" class="form-control" placeholder="Species" required>
									<div class="invalid-feedback">
										Species required!
									</div>
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label>Breed</label>
									<input asp-for="Breed" type="text" id="breed-@Model.Patient_ID" class="form-control" placeholder="Breed">
							
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									<label>Color Marking <span class="text-danger">*</span></label>
									<input asp-for="ColorMarking" type="text" id="colormarking-@Model.Patient_ID" class="form-control" placeholder="Color Marking" required>
									<div class="invalid-feedback">
										Color Marking required!
									</div>
								</div>
							</div>


						</div>
						<div class="row">


							<div class="col-md-6">
								<div class="form-group">
									<label>Date of Birth </label>
									<input asp-for="Birthday" id="dateInput-@Model.Patient_ID" type="date" class="form-control">

								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group">
									<label>Sex <span class="text-danger">*</span></label>
									<select asp-for="Sex" class="form-control" required>
										<option value="">-Select-</option>
										<option value="Male">Male</option>
										<option value="Female">Female</option>
									</select>
									<div class="invalid-feedback">
										Sex required!
									</div>
								</div>
							</div>
							<div class="col-md-12">
								<div class="form-group">
									<label>Description</label>
									<textarea asp-for="Description" id="description-@Model.Patient_ID" rows="5" type="text" class="form-control" placeholder="Description"></textarea>

								</div>
							</div>
						</div>

						<div class="box-footer text-right">
							<button data-dismiss="modal" type="button" class="btn btn-rounded btn-danger btn-outline mr-1">
								<i class="mdi mdi-close"></i> Close
							</button>
							<button id="buttonsaveEdit-@Model.Patient_ID" type="button" class="btn btn-rounded btn-primary btn-outline">
								<i class="ti-save-alt"></i> Save
							</button>
						</div>
					</form>
				</div>
			</div>
			<!-- /.tab-pane -->

			<div class="tab-pane" id="MedicalInfo">
				<div class="box-body no-padding">


					<!----content--->

				</div>


			</div>

		</div>
	</div>
	<script>
		// Get today's date in the format YYYY-MM-DD
		var today = new Date().toISOString().split('T')[0];

		// Set the max attribute of the date input to today's date
		document.getElementById('dateInput-@Model.Patient_ID').setAttribute('max', today);
	</script>

	<!-- /.modal-content -->


</div>
<!-- /.modal-dialog -->


<script>
	document.addEventListener("DOMContentLoaded", function () {
		function toTitleCase(text) {
			return text.replace(/\w\S*/g, function (txt) {
				return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
			});
		}

		function capitalizeFirstLetter(text) {
			if (text.length === 0) return text;
			return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
		}

		function capitalizeFirstLetterOnly(text) {
			return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
		}

		const inputFields = ["petname-@Model.Patient_ID", "species-@Model.Patient_ID", "breed-@Model.Patient_ID"];

		inputFields.forEach(function (fieldId) {
			const field = document.getElementById(fieldId);
			if (field) {
				field.addEventListener("blur", function () {
					this.value = toTitleCase(this.value);
				});
			}
		});

		const descriptionField = document.getElementById("description-@Model.Patient_ID");
		if (descriptionField) {
			descriptionField.addEventListener("blur", function () {
				this.value = capitalizeFirstLetter(this.value);
			});
		}

		const colorMarkingField = document.getElementById("colormarking-@Model.Patient_ID");
		if (colorMarkingField) {
			colorMarkingField.addEventListener("blur", function () {
				this.value = capitalizeFirstLetterOnly(this.value);
			});
		}
	});
</script>




<script src="~/js/helper.js"></script>
<script>
	$(document).ready(function () {
		$('#buttonsaveEdit-@Model.Patient_ID').click(function (event) {
			var form = $('#EditPatientForm-@Model.Patient_ID')[0]; // Get the form element

			// Prevent default behavior and stop propagation if form is invalid
			if (!form.checkValidity()) {
				event.preventDefault();
				event.stopPropagation();
			} else {
				// If the form is valid, proceed with SavingFunction
				SavingFunction({
					url: "@Url.Action("EditPatientInfo", "Patient")",
					form: "#EditPatientForm-@Model.Patient_ID",
					title: "Are you sure?",
					message: "Do you want to save this record",
					redirection: "@Url.Action("ViewRecord", "Patient")"
				});
			}

			// Trigger Bootstrap form validation styles
			form.classList.add('was-validated');
		});
	});
	$(document).ready(function () {
		'use strict';

		var forms = document.querySelectorAll('.needs-validation');
		Array.prototype.slice.call(forms).forEach(function (form) {
			$(form).find('button[type="submit"]').on('click', function (event) {
				if (!form.checkValidity()) {
					event.preventDefault();
					event.stopPropagation();
				} else {
					event.preventDefault();

					var formData = new FormData(form);
					$.ajax({
						url: $(form).attr('action'),
						type: 'POST',
						data: formData,
						processData: false,
						contentType: false,
						success: function () {
							location.reload(); 
						},
						error: function (xhr, status, error) {
							alert('An error occurred: ' + error);
						}
					});
				}

				form.classList.add('was-validated');
			});
		});
	});
</script>