@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
	@using VetClinicCapstone.Models.ViewModel;
	@model List<UserAndOwnerViewModel>
}
<div class="container-full">
	<div class="content-header">
		<div class="d-flex align-items-center">
			<div class="mr-auto">
				<h4 class="page-title">Owner Info</h4>
			</div>

		</div>
	</div>


	<section class="content">


		<div class="col-12">
			<div class="box">
				<div class="box-body">
					<h4 class="box-title">Owner List</h4>
					@if(User.IsInRole("Staff"))
					{
						<button data-toggle="modal" data-target=".AddOwnerInfo" class="btn btn-success pull-right mb-15 text-dark">
							<i class="mdi mdi-plus"></i> New Client
						</button>
					}
	

					<div class="table-responsive">
						<table id="example1" class="table table-bordered table-striped" style="width:100%">
							<thead>
								<tr>
									<th>ID</th>
									<th>First Name</th>
									<th>Last Name</th>
									<th>Phone</th>
									<th>Email</th>
									<th>Address</th>
									<th>Option</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var list in Model)
								{
									<tr>
										<td>@list.OwnerDetail.Owner_ID</td>
										<td>@list.OwnerDetail.Firstname</td>
										<td>@list.OwnerDetail.Lastname</td>
										<td>@list.OwnerDetail.Phone</td>
										<td>@list.OwnerDetail.Email</td>
										<td>@list.OwnerDetail.Baranggay, @list.OwnerDetail.City, @list.OwnerDetail.Province</td>
										<td>
											<a asp-action="ViewRecord" asp-controller="Patient" asp-route-id="@list.OwnerDetail.Owner_ID" data-toggle="tooltip" title="" data-original-title="View" class="waves-effect waves-light btn btn-success-light btn-circle mx-5"><span class="mdi mdi-eye-outline"><span class="path1"></span><span class="path2"></span></span></a>
											@* <a href="#" class="btn-sm btn-info" data-toggle="modal" data-target="@("#EditText-" + list.Owner_ID)">Edit</a> *@
@* 											<a href="#" data-toggle="modal" data-target="@("#EditText-" + list.Owner_ID)" title="Edit" class="waves-effect waves-light btn btn-primary-light btn-circle mx-5" data-original-title="Edit"><span class="icon-Write"><span class="path1"></span><span class="path2"></span></span></a>
											@await Html.PartialAsync("_EditOwnerInfoPartialView.cshtml", list) *@
										</td>
									</tr>
									
								}

								
							</tbody>
						</table>
					</div>
				</div>
				<!-- /.box-body -->
			</div>
		</div>
	</section>
</div>

<!--Model Popup Area-->




<!--Add Onwer Modal-->
<div class="modal fade AddOwnerInfo" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="box-title text-info"><i class="ti-user mr-15"></i> About Owner Info</h4>
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			</div>
			<div class="modal-body">
				<form method="post" id="AddOwnerForm" class="needs-validation" novalidate>
					<hr class="my-15">
					<div class="row">
						<div class="col-md-3">
							<div class="form-group">
								<label>First Name <span class="text-danger">*</span></label>
								<input name="Firstname" type="text" class="form-control"id="firstname" placeholder="First Name" required>
								<div class="invalid-feedback">
									First name required!
								</div>
							</div>
						</div>

						<div class="col-md-3">
							<div class="form-group">
								<label>Middle Name</label>
								<input name="Midname" type="text" class="form-control"id="midname" placeholder="Middle Name">
							</div>
						</div>

						<div class="col-md-3">
							<div class="form-group">
								<label>Last Name <span class="text-danger">*</span></label>
								<input name="Lastname" type="text" class="form-control" id="lastname" placeholder="Last Name" required>
								<div class="invalid-feedback">
									Last name required!
								</div>
							</div>
						</div>

						<div class="col-md-1">
							<div class="form-group">
								<label>Suffix</label>
								<input name="SuffixName" type="text" class="form-control" id="suffixname" placeholder="Jr.">
							</div>
						</div>

						<div class="col-md-2">
							<div class="form-group">
								<label>Sex <span class="text-danger">*</span></label>
								<select name="Sex" class="form-control" required>
									<option value="">Select</option>
									<option value="Male">Male</option>
									<option value="Female">Female</option>
								</select>
								<div class="invalid-feedback">
									Please select a gender!
								</div>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label>Contact Number <span class="text-danger">*</span></label>
								<small>Ex. 09XX-XXX-XXX</small>
								<input name="Phone" type="text" id="phoneNumberAdd" class="form-control" placeholder="Contact Number" maxlength="13"required>

								<div class="invalid-feedback">
									Contact number required!
								</div>
							</div>
						</div>


						<div class="col-md-6">
							<div class="form-group">
								<label>Email</label>
								<input name="Email" type="text" class="form-control" placeholder="Email">
@* 								<div class="invalid-feedback">
									Email required!
								</div> *@
							</div>
						</div>
					</div>

					<div class="row">
						<div class="col-md-3">
							<div class="form-group">
								<label>Street <span class="text-danger">*</span></label>
								<input name="Street" type="text" class="form-control" id="street" placeholder="No. / Street" required>
								<div class="invalid-feedback">
									No. / Street required!
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-group">
								<label>Barangay <span class="text-danger">*</span></label>
								<input name="Baranggay" type="text" class="form-control" id="barangay" placeholder="Barangay" required>
								<div class="invalid-feedback">
									Barangay required!
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-group">
								<label>Municipality <span class="text-danger">*</span></label>
								<input name="City" type="text" class="form-control" id="municipality" placeholder="Municipality" required>
								<div class="invalid-feedback">
									Municipality required!
								</div>
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-group">
								<label>Province <span class="text-danger">*</span></label>
								<input name="Province" type="text" class="form-control" id="province" placeholder="Province" required>
								<div class="invalid-feedback">
									Province required!
								</div>
							</div>
						</div>
					</div>

					<div class="box-footer text-right">
						<button data-dismiss="modal" type="button" class="btn btn-rounded btn-danger btn-outline mr-1">
							<i class="mdi mdi-close"></i> Close
						</button>
						<button id="buttonsave" type="button" class="btn btn-rounded btn-primary btn-outline">
							<i class="ti-save-alt"></i> Save
						</button>
					</div>
				</form>
			</div>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>

<script>
	$(document).ready(function () {
		// Initialize tooltip
		$('[data-toggle="modal"]').tooltip({
			title: function () {
				return $(this).data('original-title');
			}
		});
	});
</script>

<script>
	// Function to format phone number dynamically
	function formatPhoneNumber() {
		let phoneNumberInput = document.getElementById('phoneNumberAdd');
		let phoneNumber = phoneNumberInput.value.replace(/\D/g, ''); // Remove non-numeric characters
		let formattedPhoneNumber = '';

		// Check if the phone number starts with 0 or 63
		if (phoneNumber.startsWith('0')) {
			formattedPhoneNumber = phoneNumber.replace(/(\d{4})(\d{3})(\d{4})/, '$1-$2-$3'); // Format as 0XXX-XXX-XXXX else {
		}

		// Update the input value with the formatted phone number
		phoneNumberInput.value = formattedPhoneNumber;
	}

	// Attach event listener to input field to format phone number dynamically
	document.getElementById('phoneNumberAdd').addEventListener('input', formatPhoneNumber);
</script>

<script src="~/js/helper.js"></script>
<script>
	$(document).ready(function () {
		$('#buttonsave').click(function (event) {
			var form = $('#AddOwnerForm')[0]; // Get the form element

			// Prevent default behavior and stop propagation if form is invalid
			if (!form.checkValidity()) {
				event.preventDefault();
				event.stopPropagation();
			} else {
				// If the form is valid, proceed with SavingFunction
				SavingFunction({
					url: "@Url.Action("AddOwnerInfo", "Patient")",
					form: "#AddOwnerForm",
					title: "Are you sure?",
					message: "Do you want to save this record",
					redirection: "@Url.Action("List", "Patient")"
				});
			}

			// Trigger Bootstrap form validation styles
			form.classList.add('was-validated');
		});
	});
</script>
<script>
	function toTitleCase(text) {
		return text.replace(/\w\S*/g, function (txt) {
			return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
		});
	}

	const inputFields = ["firstname", "midname", "lastname", "suffixname", "province", "barangay", "municipality", "street",];


	inputFields.forEach(function (fieldId) {
		document.getElementById(fieldId).addEventListener("blur", function () {
			this.value = toTitleCase(this.value);
		});
	});
</script>